name: Go Cross-Platform Build

on: [push, pull_request]

env:
  GO_VERSION: "1.24"
  OUTPUT_DIR: "dist"
  APP_SUFFIX: ""
  COMMIT_ID: "${{ github.sha }}"
  PR_PROMPT: "::warning:: Build artifact will not be uploaded due to the workflow is trigged by pull request."

jobs:
  build:
    name: Build binary CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows]
        goarch: ["386", amd64, arm, arm64]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          cache: true
          go-version: ${{ env.GO_VERSION }}
      - name: Set app name
        id: set-app-name
        run: |
          # 从go.mod获取模块名作为应用名
          APP_NAME=$(grep '^module' go.mod | awk '{print $2}' | awk -F/ '{print $NF}')
          echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV
          echo "Using app name: ${APP_NAME}"
      - name: Build binary file
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          IS_PR: ${{ !!github.head_ref }}
        run: |
          if [ $GOOS = "windows" ]; then export APP_SUFFIX="$APP_SUFFIX.exe"; fi
          if $IS_PR ; then echo $PR_PROMPT; fi
          export OUTPUT_NAME="${{ env.APP_NAME }}$APP_SUFFIX"
          export CGO_ENABLED=0
          export LD_FLAGS="-w -s"
          go build -o "${{ env.OUTPUT_DIR }}/$OUTPUT_NAME" -trimpath -ldflags "$LD_FLAGS" .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ !github.head_ref }}
        with:
          name: ${{ env.APP_NAME }}_${{ matrix.goos }}_${{ matrix.goarch }}
          path: ${{ env.OUTPUT_DIR }}/
